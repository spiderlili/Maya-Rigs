global proc constraintBlender(){// Version 1.0// By Jason Baskin// jason@jasonbaskin.com// averages the rotation of two objects and connects this value to a third object using a parent constraint// usage: select two blend sources, then target object, and execute script$sel = `ls -sl`;$size = `size ($sel)`;if ($size != 3)print "Please select just three items (the blend target should be selected last)";	else	{	$const1 = `parentConstraint -mo -w 1  $sel[0] $sel[1] $sel[2]`;	addAttr  -min 0 -max 1 -dv .5 -ln "blend"  -at double -keyable true $sel[2];	connectAttr ($sel[2]+".blend") ($const1[0]+"."+$sel[0]+"W0");	$constraintReverse = `shadingNode -asUtility plusMinusAverage`;	addAttr -keyable true -ln "one"  -at double  -min 1 -max 1 -dv 1 $constraintReverse;	setAttr ($constraintReverse+".operation") 2;	connectAttr -force ($constraintReverse+".one") ($constraintReverse+".input1D[0]");	connectAttr -force ($sel[2]+".blend") ($constraintReverse+".input1D[1]");	connectAttr -force ($constraintReverse+".output1D")  ($const1[0]+"."+$sel[1]+"W1");	select -r $sel;	}}constraintBlender;