import maya.cmds as cmds

''' Place locators to define rig shape '''

def SetColorOverrideBlue(s):
    cmds.setAttr(s + '.overrideEnabled', 1)
    cmds.setAttr(s + '.overrideColor', 15)

def SetColorOverrideYellow(s):
    cmds.setAttr(s + '.overrideEnabled', 1)
    cmds.setAttr(s + '.overrideColor', 17)

def SetColorOverrideRed(s):
    cmds.setAttr(s + '.overrideEnabled', 1)
    cmds.setAttr(s + '.overrideColor', 13)
    
def lockTranslate(s):
    cmds.setAttr(s + '.tx', key = False, l = True)
    cmds.setAttr(s + '.ty', key = False, l = True)
    cmds.setAttr(s + '.tz', key = False, l = True)

def lockScale(s):
    cmds.setAttr(s + '.sx', key = False, l = True)
    cmds.setAttr(s + '.sy', key = False, l = True)
    cmds.setAttr(s + '.sz', key = False, l = True)

def lockRotate(s):
    cmds.setAttr(s + '.rx', key = False, l = True)
    cmds.setAttr(s + '.ry', key = False, l = True)
    cmds.setAttr(s + '.rz', key = False, l = True)

hindToe = cmds.spaceLocator(n='L_hindToe_LOC')
cmds.setAttr(hindToe[0]+'.translateX', 12)
cmds.setAttr(hindToe[0]+'.translateZ', -20)
SetColorOverrideBlue(hindToe[0])

hindAnkle = cmds.spaceLocator(n='L_hindAnkle_LOC')
cmds.setAttr(hindAnkle[0]+'.translateX', 12)
cmds.setAttr(hindAnkle[0]+'.translateY', 5)
cmds.setAttr(hindAnkle[0]+'.translateZ', -23)
SetColorOverrideBlue(hindAnkle[0])

hindKnee = cmds.spaceLocator(n='L_hindKnee_LOC')
cmds.setAttr(hindKnee[0]+'.translateX', 12)
cmds.setAttr(hindKnee[0]+'.translateY', 25)
cmds.setAttr(hindKnee[0]+'.translateZ', -28)
SetColorOverrideBlue(hindKnee[0])

hindUpperKnee = cmds.spaceLocator(n='L_hindUpperKnee_LOC')
cmds.setAttr(hindUpperKnee[0]+'.translateX', 12)
cmds.setAttr(hindUpperKnee[0]+'.translateY', 36)
cmds.setAttr(hindUpperKnee[0]+'.translateZ', -19)
SetColorOverrideBlue(hindUpperKnee[0])

hindFemur = cmds.spaceLocator(n='L_hindFemur_LOC')
cmds.setAttr(hindFemur[0]+'.translateX', 12)
cmds.setAttr(hindFemur[0]+'.translateY', 50)
cmds.setAttr(hindFemur[0]+'.translateZ', -25)
SetColorOverrideBlue(hindFemur[0])

hindPelvis = cmds.spaceLocator(n='L_hindPelvis_LOC')
cmds.setAttr(hindPelvis[0]+'.translateY', 54)
cmds.setAttr(hindPelvis[0]+'.translateZ', -24)
SetColorOverrideYellow(hindPelvis[0])

hindLocGrp = cmds.group(hindToe,hindAnkle, hindKnee, hindUpperKnee, hindFemur, hindPelvis, n='HindPlacement_GRP')

''' Front leg locator placement '''
frontToe = cmds.spaceLocator(n='L_frontToe_LOC')
cmds.setAttr(frontToe[0]+'.translateX', 12)
cmds.setAttr(frontToe[0]+'.translateZ', 24)
SetColorOverrideBlue(frontToe[0])

frontAnkle = cmds.spaceLocator(n='L_frontAnkle_LOC')
cmds.setAttr(frontAnkle[0]+'.translateX', 12)
cmds.setAttr(frontAnkle[0]+'.translateY', 5)
cmds.setAttr(frontAnkle[0]+'.translateZ', 21)
SetColorOverrideBlue(frontAnkle[0])

frontKnee = cmds.spaceLocator(n='L_frontKnee_LOC')
cmds.setAttr(frontKnee[0]+'.translateX', 12)
cmds.setAttr(frontKnee[0]+'.translateY', 25)
cmds.setAttr(frontKnee[0]+'.translateZ', 24)
SetColorOverrideBlue(frontKnee[0])

frontUpperKnee = cmds.spaceLocator(n='L_frontUpperKnee_LOC')
cmds.setAttr(frontUpperKnee[0]+'.translateX', 12)
cmds.setAttr(frontUpperKnee[0]+'.translateY', 36)
cmds.setAttr(frontUpperKnee[0]+'.translateZ', 18)
SetColorOverrideBlue(frontUpperKnee[0])

frontFemur = cmds.spaceLocator(n='L_frontFemur_LOC')
cmds.setAttr(frontFemur[0]+'.translateX', 12)
cmds.setAttr(frontFemur[0]+'.translateY', 44)
cmds.setAttr(frontFemur[0]+'.translateZ', 25)
SetColorOverrideBlue(frontFemur[0])

frontPelvis = cmds.spaceLocator(n='L_frontPelvis_LOC')
cmds.setAttr(frontPelvis[0]+'.translateY', 54)
cmds.setAttr(frontPelvis[0]+'.translateZ', 20)
SetColorOverrideYellow(frontPelvis[0])

frontLocGrp = cmds.group(frontToe, frontAnkle, frontKnee, frontUpperKnee, frontFemur, frontPelvis, n='FrontPlacement_GRP')

''' Neck locators '''
neckRoot = cmds.spaceLocator(n='NeckRoot_LOC')
cmds.setAttr(neckRoot[0]+'.translateY', 48)
cmds.setAttr(neckRoot[0]+'.translateZ', 30)
SetColorOverrideYellow(neckRoot[0])

neckEnd = cmds.spaceLocator(n='neckEnd_LOC')
cmds.setAttr(neckEnd[0]+'.translateY', 58)
cmds.setAttr(neckEnd[0]+'.translateZ', 50)
SetColorOverrideYellow(neckEnd[0])

neckLocGrp = cmds.group(neckRoot, neckEnd, n='NeckPlacement_GRP')

''' Tail locators '''
tailRoot = cmds.spaceLocator(n='TailRoot_LOC')
cmds.setAttr(tailRoot[0]+'.translateY', 54)
cmds.setAttr(tailRoot[0]+'.translateZ', -32)
SetColorOverrideYellow(tailRoot[0])

tailEnd = cmds.spaceLocator(n='TailEnd_LOC')
cmds.setAttr(tailEnd[0]+'.translateY', 54)
cmds.setAttr(tailEnd[0]+'.translateZ', -62)
SetColorOverrideYellow(tailEnd[0])

tailLocGrp = cmds.group(tailRoot, tailEnd, n='TailPlacement_GRP')

''' Finalize placement locator module '''
mainLocGrp = cmds.group(tailLocGrp, neckLocGrp, frontLocGrp, hindLocGrp, n='MainPlacementLoc_GRP')

''' World Controller. TODO: Replace with Custom Curves'''
worldCtrl = cmds.circle(nr = [0,1,0], n = 'World Controller')
worldCtrl = worldCtrl[0]
subworldCtrl = cmds.circle(nr = [0,1,0],n = 'Sub World Controller')
subworldCtrl = subworldCtrl[0]
cmds.scale(0.7, 0.7, 0.7, subworldCtrl + '.cv[0:16]')
cmds.parent(subworldCtrl, worldCtrl)
SetColorOverrideYellow(worldCtrl)

# Joints
''' Create legs module '''
hindPelvisJnt = cmds.joint(n = 'C_HindPelvis_JNT')
SetColorOverrideYellow(hindPelvisJnt)
constraint = cmds.pointConstraint(hindPelvis, hindPelvisJnt)
cmds.delete(constraint)
cmds.select(d = True)

L_hindToeJnt = cmds.joint(n = 'L_HindToe_JNT')
SetColorOverrideYellow(L_hindToeJnt)
constraint = cmds.pointConstraint(hindToe, L_hindToeJnt)
cmds.delete(constraint)
cmds.select(d = True)

L_hindAnkleJnt = cmds.joint(n = 'L_HindAnkle_JNT')
SetColorOverrideYellow(L_hindAnkleJnt)
constraint = cmds.pointConstraint(hindAnkle, L_hindAnkleJnt)
cmds.delete(constraint)
cmds.select(d = True)

L_hindKneeJnt = cmds.joint(n = 'L_HindKnee_JNT')
SetColorOverrideYellow(L_hindKneeJnt)
constraint = cmds.pointConstraint(hindKnee, L_hindKneeJnt)
cmds.delete(constraint)
cmds.select(d = True)

L_hindUpperKneeJnt = cmds.joint(n = 'L_HindUpperKnee_JNT')
SetColorOverrideYellow(L_hindUpperKneeJnt) 
constraint = cmds.pointConstraint(hindUpperKnee, L_hindUpperKneeJnt)
cmds.delete(constraint)
cmds.select(d = True)

L_hindFemurJnt = cmds.joint(n = 'L_HindFemur_JNT') 
SetColorOverrideYellow(L_hindFemurJnt)
constraint = cmds.pointConstraint(hindFemur, L_hindFemurJnt)
cmds.delete(constraint)
cmds.select(d = True)

# Mirror joints to L & R sides
R_hindToeJnt = cmds.duplicate(L_hindToeJnt, n = 'R_HindToe_JNT')
xPos = cmds.getAttr(L_hindToeJnt + '.tx')
R_hindToeJnt = R_hindToeJnt[0]
cmds.setAttr(R_hindToeJnt + '.tx', -xPos)

R_hindAnkleJnt = cmds.duplicate(L_hindAnkleJnt, n = 'R_HindAnkle_JNT')
xPos = cmds.getAttr(L_hindAnkleJnt + '.tx')
R_hindAnkleJnt = R_hindAnkleJnt[0]
cmds.setAttr(R_hindAnkleJnt + '.tx', -xPos)

R_hindKneeJnt = cmds.duplicate(L_hindKneeJnt, n = 'R_HindKnee_JNT')
xPos = cmds.getAttr(L_hindKneeJnt + '.tx')
R_hindKneeJnt = R_hindKneeJnt[0]
cmds.setAttr(R_hindKneeJnt + '.tx', -xPos)

R_hindUpperKneeJnt = cmds.duplicate(L_hindUpperKneeJnt, n = 'R_HindUpperKnee_JNT')
xPos = cmds.getAttr(L_hindUpperKneeJnt + '.tx')
R_hindUpperKneeJnt = R_hindUpperKneeJnt[0]
cmds.setAttr(R_hindUpperKneeJnt + '.tx', -xPos)

R_hindFemurJnt = cmds.duplicate(L_hindFemurJnt, n = 'R_HindFemur_JNT')
xPos = cmds.getAttr(L_hindFemurJnt + '.tx')
R_hindFemurJnt = R_hindFemurJnt[0]
cmds.setAttr(R_hindFemurJnt + '.tx', -xPos)

# End joints for Maya skinning
L_hindToeEndJnt = cmds.joint(n = 'L_HindToeEnd_JNT')
constraint = cmds.pointConstraint(hindToe, L_hindToeEndJnt)
cmds.delete(constraint)
cmds.parent(L_hindToeEndJnt, L_hindToeJnt)
cmds.setAttr(L_hindToeEndJnt + '.tz', 0.04)
cmds.setAttr(L_hindToeEndJnt + '.visibility', 0)
cmds.select(d = True)

R_hindToeEndJnt = cmds.joint(n = 'R_HindToeEnd_JNT')
cmds.parent(R_hindToeEndJnt, R_hindToeJnt, r=True)
cmds.setAttr(R_hindToeEndJnt + '.tz', 0.04)
cmds.setAttr(R_hindToeEndJnt + '.visibility', 0)
cmds.select(d = True)

# Parent hind leg joints, set up both L & R joint chains
cmds.parent(L_hindToeJnt, L_hindAnkleJnt)
cmds.parent(L_hindAnkleJnt, L_hindKneeJnt)
cmds.parent(L_hindKneeJnt, L_hindUpperKneeJnt)
cmds.parent(L_hindUpperKneeJnt, L_hindFemurJnt)
cmds.parent(L_hindFemurJnt, hindPelvisJnt)

cmds.parent(R_hindToeJnt, R_hindAnkleJnt)
cmds.parent(R_hindAnkleJnt, R_hindKneeJnt)
cmds.parent(R_hindKneeJnt, R_hindUpperKneeJnt)
cmds.parent(R_hindUpperKneeJnt, R_hindFemurJnt)
cmds.parent(R_hindFemurJnt, hindPelvisJnt)

# Orient joints
cmds.select(L_hindFemurJnt)
cmds.joint(e = True, zso = True, oj = 'xyz', secondaryAxisOrient = 'yup', ch = True)
cmds.select(R_hindFemurJnt)
cmds.joint(e = True, zso = True, oj = 'xyz', secondaryAxisOrient = 'yup', ch = True)
cmds.select(d = True)

''' IK Hind Legs '''
L_hindToeJntIK = cmds.joint(n='L_HindToeIK_JNT')
constraint = cmds.pointConstraint(hindToe, L_hindToeJntIK)
cmds.delete(constraint)
cmds.select(d = True)

L_hindAnkleJntIK = cmds.joint(n = 'L_HindAnkleIK_JNT')
constraint = cmds.pointConstraint(hindAnkle, L_hindAnkleJntIK)
cmds.delete(constraint)
cmds.select(d = True)

L_hindKneeJntIK = cmds.joint(n = 'L_HindKneeIK_JNT')
constraint = cmds.pointConstraint(hindKnee, L_hindKneeJntIK)
cmds.delete(constraint)
cmds.select(d = True)

L_hindUpperKneeJntIK = cmds.joint(n = 'L_HindUpperKneeIK_JNT')
constraint = cmds.pointConstraint(hindUpperKnee, L_hindUpperKneeJntIK)
cmds.delete(constraint)
cmds.select(d = True)

L_hindFemurJntIK = cmds.joint(n = 'L_HindFemurIK_JNT') 
constraint = cmds.pointConstraint(hindFemur, L_hindFemurJntIK)
cmds.delete(constraint)
cmds.select(d = True)

# Mirror IK joints to L & R sides
R_hindToeJntIK = cmds.duplicate(L_hindToeJntIK, n = 'R_HindToeIK_JNT')
xPos = cmds.getAttr(L_hindToeJntIK + '.tx')
R_hindToeJntIK = R_hindToeJntIK[0]
cmds.setAttr(R_hindToeJntIK + '.tx', -xPos)

R_hindAnkleJntIK = cmds.duplicate(L_hindAnkleJntIK, n = 'R_HindAnkleIK_JNT')
xPos = cmds.getAttr(L_hindAnkleJntIK + '.tx')
R_hindAnkleJntIK = R_hindAnkleJntIK[0]
cmds.setAttr(R_hindAnkleJntIK + '.tx', -xPos)

R_hindKneeJntIK = cmds.duplicate(L_hindKneeJntIK, n = 'R_HindKneeIK_JNT')
xPos = cmds.getAttr(L_hindKneeJntIK + '.tx')
R_hindKneeJntIK = R_hindKneeJntIK[0]
cmds.setAttr(R_hindKneeJntIK + '.tx', -xPos)

R_hindUpperKneeJntIK = cmds.duplicate(L_hindUpperKneeJntIK, n = 'R_HindUpperKneeIK_JNT')
xPos = cmds.getAttr(L_hindUpperKneeJntIK + '.tx')
R_hindUpperKneeJntIK = R_hindUpperKneeJntIK[0]
cmds.setAttr(R_hindUpperKneeJntIK + '.tx', -xPos)

R_hindFemurJntIK = cmds.duplicate(L_hindFemurJntIK, n = 'R_HindFemurIK_JNT')
xPos = cmds.getAttr(L_hindFemurJntIK + '.tx')
R_hindFemurJntIK = R_hindFemurJntIK[0]
cmds.setAttr(R_hindFemurJntIK + '.tx', -xPos)

# Parent hind leg IK joints, set up both L & R IK joint chains
cmds.parent(L_hindToeJntIK, L_hindAnkleJntIK)
cmds.parent(L_hindAnkleJntIK, L_hindKneeJntIK)
cmds.parent(L_hindKneeJntIK, L_hindUpperKneeJntIK)
cmds.parent(L_hindUpperKneeJntIK, L_hindFemurJntIK)
cmds.parent(L_hindFemurJntIK, hindPelvisJnt)

cmds.parent(R_hindToeJntIK, R_hindAnkleJntIK)
cmds.parent(R_hindAnkleJntIK, R_hindKneeJntIK)
cmds.parent(R_hindKneeJntIK, R_hindUpperKneeJntIK)
cmds.parent(R_hindUpperKneeJntIK, R_hindFemurJntIK)
cmds.parent(R_hindFemurJntIK, hindPelvisJnt)

# Orient IK joints chain correctly
cmds.select(L_hindFemurJntIK)
cmds.joint(e = True, zso = True, oj = 'xyz', secondaryAxisOrient = 'yup', ch = True)
cmds.select(R_hindFemurJntIK)
cmds.joint(e = True, zso = True, oj = 'xyz', secondaryAxisOrient = 'yup', ch = True)
cmds.select(d = True)

''' FK Hind Legs '''
L_hindToeJntFK = cmds.joint(n='L_HindToeFK_JNT')
constraint = cmds.pointConstraint(hindToe, L_hindToeJntFK)
cmds.delete(constraint)
cmds.select(d = True)

L_hindAnkleJntFK = cmds.joint(n = 'L_HindAnkleFK_JNT')
constraint = cmds.pointConstraint(hindAnkle, L_hindAnkleJntFK)
cmds.delete(constraint)
cmds.select(d = True)

L_hindKneeJntFK = cmds.joint(n = 'L_HindKneeFK_JNT')
constraint = cmds.pointConstraint(hindKnee, L_hindKneeJntFK)
cmds.delete(constraint)
cmds.select(d = True)

L_hindUpperKneeJntFK = cmds.joint(n = 'L_HindUpperKneeFK_JNT')
constraint = cmds.pointConstraint(hindUpperKnee, L_hindUpperKneeJntFK)
cmds.delete(constraint)
cmds.select(d = True)

L_hindFemurJntFK = cmds.joint(n = 'L_HindFemurFK_JNT') 
constraint = cmds.pointConstraint(hindFemur, L_hindFemurJntFK)
cmds.delete(constraint)
cmds.select(d = True)

# Mirror FK joints to L & R sides
R_hindToeJntFK = cmds.duplicate(L_hindToeJntFK, n = 'R_HindToeFK_JNT')
xPos = cmds.getAttr(L_hindToeJntFK + '.tx')
R_hindToeJntFK = R_hindToeJntFK[0]
cmds.setAttr(R_hindToeJntFK + '.tx', -xPos)

R_hindAnkleJntFK = cmds.duplicate(L_hindAnkleJntFK, n = 'R_HindAnkleFK_JNT')
xPos = cmds.getAttr(L_hindAnkleJntFK + '.tx')
R_hindAnkleJntFK = R_hindAnkleJntFK[0]
cmds.setAttr(R_hindAnkleJntFK + '.tx', -xPos)

R_hindKneeJntFK = cmds.duplicate(L_hindKneeJntFK, n = 'R_HindKneeFK_JNT')
xPos = cmds.getAttr(L_hindKneeJntFK + '.tx')
R_hindKneeJntFK = R_hindKneeJntFK[0]
cmds.setAttr(R_hindKneeJntFK + '.tx', -xPos)

R_hindUpperKneeJntFK = cmds.duplicate(L_hindUpperKneeJntFK, n = 'R_HindUpperKneeFK_JNT')
xPos = cmds.getAttr(L_hindUpperKneeJntFK + '.tx')
R_hindUpperKneeJntFK = R_hindUpperKneeJntFK[0]
cmds.setAttr(R_hindUpperKneeJntFK + '.tx', -xPos)

R_hindFemurJntFK = cmds.duplicate(L_hindFemurJntFK, n = 'R_HindFemurFK_JNT')
xPos = cmds.getAttr(L_hindFemurJntFK + '.tx')
R_hindFemurJntFK = R_hindFemurJntFK[0]
cmds.setAttr(R_hindFemurJntFK + '.tx', -xPos)

# Parent hind leg FK joints, set up both L & R FK joint chains
cmds.parent(L_hindToeJntFK, L_hindAnkleJntFK)
cmds.parent(L_hindAnkleJntFK, L_hindKneeJntFK)
cmds.parent(L_hindKneeJntFK, L_hindUpperKneeJntFK)
cmds.parent(L_hindUpperKneeJntFK, L_hindFemurJntFK)
cmds.parent(L_hindFemurJntFK, hindPelvisJnt)

cmds.parent(R_hindToeJntFK, R_hindAnkleJntFK)
cmds.parent(R_hindAnkleJntFK, R_hindKneeJntFK)
cmds.parent(R_hindKneeJntFK, R_hindUpperKneeJntFK)
cmds.parent(R_hindUpperKneeJntFK, R_hindFemurJntFK)
cmds.parent(R_hindFemurJntFK, hindPelvisJnt)

# Orient FK joints chain correctly
cmds.select(L_hindFemurJntFK)
cmds.joint(e = True, zso = True, oj = 'xyz', secondaryAxisOrient = 'yup', ch = True)
cmds.select(R_hindFemurJntFK)
cmds.joint(e = True, zso = True, oj = 'xyz', secondaryAxisOrient = 'yup', ch = True)
cmds.select(d = True)
